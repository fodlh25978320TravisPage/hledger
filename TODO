optimization: add CookedLedger caching acct txns, boring status etc.
 refactor apis

speed
 profile, refactor, optimize

basic features
 , in thousands
 -f -
 print
 -j and -J graph data output
 !include
 read timelog files

advanced features
 handle mixed amounts
 3.0-style elision
 -p period expressions
 -d display expressions
 read gnucash files
 other args, directives

new features
 graph automation
 entry and smart data entry
 incorporate timeclock features
 timelog simple amount entries
 better layout

testing
 better use of quickcheck/smallcheck
  http://blog.codersbase.com/2006/09/01/simple-unit-testing-in-haskell/
 ledger compatibility tests

documentation
 literate docs
 better use of haddock

marketing
 set up as a cabal/hackage project following wiki howto ?
  http://en.wikibooks.org/wiki/Haskell/Packaging
 announce on haskell list, wiki
