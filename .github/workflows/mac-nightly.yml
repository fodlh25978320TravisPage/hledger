# basic build testing on mac, run nightly

name: mac nightly CI

on:
  # XXX not supported yet; build on noteworthy push to "ci" instead
  # schedule:
  # - cron: "0 23 * * *"
  # uncomment when testing CI:
  push:
    branches: [ ci, master ]  # master too for testing
    paths:
      - '.github/workflows/mac-nightly.yml'
      - 'stack*'
      - 'hledger-lib'
      - 'hledger'
      - 'hledger-ui'
      - 'hledger-web'
      - '!**.md'
      - '!**.1'
      - '!**.5'
      - '!**.info'
      - '!**.txt'
  # pull_request:
  #   branches: [ master ]
  #   paths:
  #     - 'stack*'
  #     - 'hledger-lib'
  #     - 'hledger'
  #     - 'hledger-ui'
  #     - 'hledger-web'
  #     - '.github/workflows/mac*'
  #     - '!**.md'
  #     - '!**.1'
  #     - '!**.5'
  #     - '!**.info'
  #     - '!**.txt'

jobs:
  build:
    runs-on: macos-latest
    steps:

    - name: Check out
      uses: actions/checkout@v2

    # declare/restore cached things

    - name: Cache stack global package db
      id:   stack-global
      uses: actions/cache@v1
      with:
        path: ~/.stack
        key:          ${{ runner.os }}-stack-global-${{ hashFiles('**.yaml') }}
        restore-keys: |
          ${{ runner.os }}-stack-global
          ${{ runner.os }}-stack

    - name: Cache stack-installed programs in ~/.local/bin
      id:   stack-programs
      uses: actions/cache@v1
      with:
        path: ~/.local/bin
        key:          ${{ runner.os }}-stack-programs-${{ hashFiles('**.yaml') }}
        restore-keys: |
          ${{ runner.os }}-stack-programs
          ${{ runner.os }}-local-bin

    # stack's local package dbs for the project and each package
    - name: Cache .stack-work
      uses: actions/cache@v1
      with:
        path: .stack-work
        key: ${{ runner.os }}-stack-work

    - name: Cache hledger-lib/.stack-work
      uses: actions/cache@v1
      with:
        path: hledger-lib/.stack-work
        key: ${{ runner.os }}-hledger-lib-stack-work

    - name: Cache hledger/.stack-work
      uses: actions/cache@v1
      with:
        path: hledger/.stack-work
        key: ${{ runner.os }}-hledger-stack-work

    - name: Cache hledger-ui/.stack-work
      uses: actions/cache@v1
      with:
        path: hledger-ui/.stack-work
        key: ${{ runner.os }}-hledger-ui-stack-work

    - name: Cache hledger-web/.stack-work
      uses: actions/cache@v1
      with:
        path: hledger-web/.stack-work
        key: ${{ runner.os }}-hledger-web-stack-work

    # actions

    - name: Install stack
      # curl --insecure -L https://get.haskellstack.org/stable/osx-x86_64.tar.gz | tar xz --strip-components=1 --include '*/stack' -C $INSTALLDIR
      run: |
        brew install haskell-stack
        stack --version

    - name: Install GHC
      run: |
        stack --resolver=lts setup

    # - name: Install shelltestrunner
    # - if [[ ! -x ~/.local/bin/shelltest ]]; then stack install shelltestrunner-1.9; fi
    # - shelltest --version

    - name: Install haskell deps
      run: |
        stack --resolver=lts --install-ghc build --test --bench --only-dependencies
        #  --no-terminal --bench --install-ghc

    - name: Build hledger and test unit tests, doc tests
      run: |
        stack --resolver=lts test --only-dependencies
        #  --no-terminal --bench --install-ghc

    - name: Install shelltestrunner
      run: |
        export PATH=~/.local/bin:$PATH
        if [[ ! -x ~/.local/bin/shelltest ]]; then stack $ARGS install shelltestrunner-1.9; fi
        shelltest --version
      env:
        ARGS: ${{ matrix.plan.resolver }}

    - name: Test functional tests (excluding addons)
      run: |
        COLUMNS=80 stack $ARGS exec -- shelltest --execdir -j16 tests -x /bin -x /addons
      env:
        ARGS: ${{ matrix.plan.resolver }}

