cache:
- "%LOCALAPPDATA%\\Programs\\stack"
- "c:\\project\\.stack-work"
- "c:\\sr"  #  -> appveyor.yml
# to force cache deletion: browse ui, open inspector,
# $.ajax({url: 'https://ci.appveyor.com/api/projects/simonmichael/hledger/buildcache',type: 'DELETE'})

build: off

# https://www.appveyor.com/docs/how-to/filtering-commits
# Add [skip ci] or [ci skip] anywhere to commit message and build wonâ€™t 
# be triggered by AppVeyor for that commit. Or explicitly skip AppVeyor only 
# with [skip appveyor] and still allow any other CI to build the commit 
# (eg. Travis CI).

#uncomment once to cache latest stack
before_test:
- curl -ostack.zip -L --insecure http://www.stackage.org/stack/windows-i386
- 7z x stack.zip stack.exe

clone_folder: "c:\\project"
environment:
  global:
    STACK_ROOT: "c:\\sr"
# set in UI, can we set here ?
#    APPVEYOR_SAVE_CACHE_ON_ERROR: "true"

test_script:
- echo "" | stack --no-terminal --install-ghc test -j1 hledger hledger-web hledger-api
- stack --local-bin-path . -j1 install hledger hledger-web hledger-api
# -j1 is temporary, attempting to work around  
# https://github.com/simonmichael/hledger/issues/424
# https://github.com/commercialhaskell/stack/issues/2617

artifacts:
- path: hledger.exe
- path: hledger-web.exe
- path: hledger-api.exe

#deployment stuff for later
#
#- cmd: for /f %%i in ('.\\hledger --version') do set HLEDGER_VERSION=%%i
#- cmd: for /f %%i in ('.\\hledger-web --version') do set HLEDGER_WEB_VERSION=%%i
#- cmd: for /f %%i in ('.\\hledger-api --version') do set HLEDGER_API_VERSION=%%i
#
#skip_tags: true
#
#deploy:
#  - provider: GitHub
#    tag: 'hledger-$(HLEDGER_VERSION)'
#    release: 'Release hledger-$(HLEDGER_VERSION)'
#    auth_token:
#      secure: #FZXhwa1ucQwyFtswv/XNUJkclAxoz4YGGu69dSOEEkwG7Rlh/Gho66SJtOUJ57kN
#    artifact: hledger.exe
#    on:
#      branch: master

# cf https://silky.github.io/posts/2016-01-05-build-windows-haskell-app-with-stack-and-appveyor.html
