# * include directive

# ** 1. journal, timeclock, and timedot files can be included.
# Trailing whitespace or comments are ignored.
# The order of includes is respected.
include a.j  
include b.timedot ; comment
include a.timeclock
 ; comment

$ hledger -f - print
2016-01-01
    (a)               1

2016-01-01 *
    (b.bb)            1.00

2016-01-01 * 12:00-16:00
    (a:aa)           4.00h

>=

# ** 2. The old !include spelling still works.
<
!include f.journal
$  printf '2018/01/01\n (A)  1\n' >f.journal; hledger -f - print; rm -f f.journal
2018-01-01
    (A)               1

>=

# ** 3. A leading tilde is expanded to $HOME.
<
include ~/included.journal
$  printf '2018/01/01\n (A)  1\n' >included.journal; HOME="$PWD" hledger -f - print; rm -rf included.journal
2018-01-01
    (A)               1

>= 0

# ** 4. include with no argument -> argument error
<
include 
$ hledger -f- files
>2 /include needs a.*argument/
>=1

# ** 5. include a nonexistent file -> no files matched error
<
include nosuchfile
$ hledger -f- files
>2 /No files were matched/
>=1

# ** 6. Including a directory literally -> no files matched error
<
include b
$ hledger -f- files
>2 /No files were matched/
>=1

# ** 7. Include invalid glob patterns -> invalid glob error
<
include [.journal
$ hledger -f - print
>2 /Invalid glob/
>= 1

# ** 8. Three or more *'s -> invalid glob error
<
include ***
$ hledger -f- files
>2 /Invalid glob/
>=1

# ** 9. Including the current file literally -> cycle error.
$ hledger -f self.j files
>2 /cycle/
>=1

# ** 10. Including the current file via glob -> harmless, globs ignore current file.
$ hledger -f selfglob.j files | sed -E 's|.*hledger/test/journal/include/||'
selfglob.j

# ** 11. Including a cycle, all literally -> cycle error
$ hledger -f .cycle/cycle.j files
>2 /cycle/
>=1

# ** 12. Including a cycle, involving globs -> cycle error
$ hledger -f .cycle/cycleglob.j files
>2 /cycle/
>=1

# ** 13. Glob patterns ignore the current file (once).
$ hledger -f a.j files | sed -E 's|.*hledger/test/journal/include/||'
a.j
a2.j

# ** 14. Include */**/*.j -> all non-dot .j files in or below non-dot subdirectories.
<
include */**/*.j
$ hledger -f - files | sed -E 's|.*hledger/test/journal/include/||'
-
b/b.j
b/bb/bb.j
c/c.j

# ** 15. ** without a slash can also match filename start, equivalent to **/* -> same result as above.
<
include */**.j
$ hledger -f - files | sed -E 's|.*hledger/test/journal/include/||'
-
b/b.j
b/bb/bb.j
c/c.j

# ** 16. To avoid intermediate dot dirs in the above, we exclude all glob-matched paths involving dot dirs.
# So this does not find b/bb/.dotdir/dotdirbb.j, unfortunately:
<
include b/.dotdir/*.j
$ hledger -f - files | sed -E 's|.*hledger/test/journal/include/||'
>2 /No files were matched/
# sed hides the non-zero exit code

# ** 17. This workaround can be disabled with --old-glob, for now.
$ hledger -f - files --old-glob | sed -E 's|.*hledger/test/journal/include/||'
-
b/.dotdir/dotdirb.j

# ** 18. A literal path can always match dot files/dirs.
<
include b/.dotdir/dotdirb.j
$ hledger -f - files | sed -E 's|.*hledger/test/journal/include/||'
-
b/.dotdir/dotdirb.j

